name: Lint, Test, and Build

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Lint
        run: pnpm lint

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test
        run: pnpm test

  test-fail:
    name: Test Fail
    runs-on: ubuntu-latest
    needs: test
    if: failure() && !cancelled() && needs.test.result == 'failure' && github.event_name == 'pull_request' && (github.event.pull_request.user.login == 'dependabot[bot]' || github.event.pull_request.user.login == 'renovate[bot]')
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.WORKFLOW_PAT }}

      - name: Set up PNPM
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: pnpm

      - name: Set up Bun # Bun is the only way I can run the script that generates the map with such an import statement with
        uses: oven-sh/setup-bun@v2 # it's also the fastest runtime and is 100% compatible with Node sooo 🤷‍♂️

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Empty replacements file
        # This is necessary because we want to regenerate the whole map
        run: echo "export default {};" > src/renamedReplacements.js

      - name: Create Vitest report
        run: pnpm vitest --reporter=json --outputFile=out.json

      - name: Replace the map
        run: |
          map=$(bun --bun run scripts/renamings-map-from-test.js)
          echo "export default $(echo $map)" > src/renamedReplacements.js

      - name: Run Prettier
        run: pnpm prettier --write src/renamedReplacements.js

      - name: Upgrade Lucide
        run: pnpm up -L lucide-svelte

      - name: Bump the version in package.json
        run: |
          # Use jq to bump the version in package.json
          jq '.version |= (split(".") | .[2] = (. [2] | tonumber + 1) | join("."))' package.json | sponge package.json

      - name: Commit and push the changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "[release] Bump replacements map"
          file_pattern: src/renamedReplacements.js package.json pnpm-lock.yaml
          branch: ${{ github.event.repository.default_branch }}
